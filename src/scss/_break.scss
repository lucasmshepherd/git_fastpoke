@use "sass:map";
@use "sass:math";
@use "is-type" as *;
@use "nest" as *;
@use "units" as *;

$fether: ();

$break_0: 0 !default;
$break_1: 320 !default;
$break_2: 480 !default;
$break_3: 600 !default;
$break_4: 840 !default;
$break_5: 1008 !default;
$break_6: 1264 !default;
$break_7: 1424 !default;
$break_8: 1800 !default;

// breakpoints

$breakpointWidth: (
  0: $break_0,
  1: $break_1,
  2: $break_2,
  3: $break_3,
  4: $break_4,
  5: $break_5,
  6: $break_6,
  7: $break_7,
  8: $break_8
) !default;
@function bp-get($input: null) {
  $bp: map.get($breakpointWidth, $input);
  @if $bp == null {
    @return "No breakpoint found for '#{$input}'";
  } @else {
    @return its($bp);
  }
}
$setDeviceBreakpoint: (
  wear: bp-get(0),
  mobile: bp-get(1),
  mobile-md: bp-get(2),
  mobile-lg: bp-get(3),
  tablet: bp-get(3),
  tablet-md: bp-get(4),
  tablet-lg: bp-get(5),
  desktop: bp-get(6),
  desktop-lg: bp-get(7),
  desktop-xl: bp-get(8),
  tv: bp-get(8)
);
$setSizeBreakpoint: (
  xs: bp-get(0),
  xsmall: bp-get(0),
  sm: bp-get(3),
  small: bp-get(3),
  md: bp-get(4),
  medium: bp-get(4),
  lg: bp-get(6),
  large: bp-get(6),
  xl: bp-get(8),
  xlarge: bp-get(8)
);
$breakpointList: (
  breakpoint:
    map.merge(
      $setDeviceBreakpoint,
      map.merge($breakpointWidth, $setSizeBreakpoint)
    )
);
$fether: map.merge($fether, $breakpointList);

$bps: nest-get($fether, breakpoint);
$bpSizes: map.keys($bps);

@function break($input) {
  $output: ();
  $range: "min";
  $dim: "width";
  $break: null;
  $orientation: null;
  $view: null;
  @each $item in $input {
    @if $item == "max" {
      $range: $item;
    } @else if $item == "height" {
      $dim: $item;
    } @else if is-number($item) {
      @if math.is-unitless($item) {
        $break: its($item);
      } @else {
        $break: $item;
      }
    } @else if has-item($bpSizes, $item) {
      $break: nest-get($bps, $item);
    } @else if $item == "landscape" or $item == "portrait" {
      $orientation: $item;
    } @else if $item == "screen" or $item == "print" or $item == "speech" {
      $view: $item;
    } @else if $item == "all" {
      $view: $item;
    } @else if $item == "retina" {
      @return "screen and (-webkit-min-device-pixel-ratio: 2)",
        "screen and (min--moz-device-pixel-ratio: 2)",
        "screen and (-o-min-device-pixel-ratio: 2/1)",
        "screen and (min-device-pixel-ratio: 2)",
        "screen and (min-resolution: 192dpi)",
        "screen and (min-resolution: 2dppx)";
    } @else {
      @return $input;
    }
  }
  @if $view {
    @return $view;
  } @else if $orientation {
    @return "screen and (orientation: #{$orientation})";
  } @else {
    @if $range == "max" {
      @if $dim == "height" {
        @return "(max-height: #{$break})";
      } @else {
        @return "(max-width: #{$break})";
      }
    } @else {
      @if $dim == "height" {
        @return "(min-height: #{$break})";
      } @else {
        @return "(min-width: #{$break})";
      }
    }
  }
}
@mixin break($input: null) {
  @media #{break($input)} {
    @content;
  }
}